# This is a bit overkill. Just for demonstration. You could just as easily
# use ../server/server.yaml.

replicaCount: 1

image:
  repository: zweknu/spellingbee
  pullPolicy: Always
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

service:
  # Use Cloud Provider KIND
  # (https://kind.sigs.k8s.io/docs/user/loadbalancer/)
  # for loadbalancer support.
  type: LoadBalancer
  ports:
    - name: "grpc"
      port: 3000
    - name: "web"
      port: 3001

ingress:
  enabled: true
  className: ""
  annotations: {}
  hosts:
    - host: deerfly.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
   limits:
     cpu: 1000m
     memory: 128Mi
   requests:
     cpu: 1000m
     memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 3001
readinessProbe:
  httpGet:
    path: /
    port: 3001

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
